// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/addTicket": {
            "post": {
                "description": "insert a ticket",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ticket"
                ],
                "summary": "Create Ticket",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ticket.inputTicket"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ticket.messageResponse"
                        }
                    }
                }
            }
        },
        "/listTicket": {
            "post": {
                "description": "list a ticket",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ticket"
                ],
                "summary": "List Ticket",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ticket.inputTicketList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ticket.ticketListRes"
                        }
                    }
                }
            }
        },
        "/updateTicket": {
            "post": {
                "description": "update a ticket",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ticket"
                ],
                "summary": "Update Ticket",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ticket.inputTicketUpdate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ticket.messageResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ticket.inputTicket": {
            "type": "object",
            "properties": {
                "contact_information": {
                    "type": "string",
                    "example": "address......"
                },
                "description": {
                    "type": "string",
                    "example": "story of school magic"
                },
                "title": {
                    "type": "string",
                    "example": "Harry potter"
                }
            }
        },
        "ticket.inputTicketList": {
            "type": "object",
            "properties": {
                "filter_create_date_from": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-01-11T01:02:18.070Z"
                },
                "filter_create_date_to": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-01-11T01:02:18.070Z"
                },
                "filter_title": {
                    "type": "string",
                    "example": "Harryporter4"
                },
                "filter_update_date_from": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-01-11T01:02:18.070Z"
                },
                "filter_update_date_to": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-01-11T01:02:18.070Z"
                },
                "paging_index": {
                    "type": "integer",
                    "example": 1
                },
                "paging_size": {
                    "type": "integer",
                    "example": 10
                },
                "sort_by": {
                    "type": "string",
                    "example": "id"
                },
                "sort_type": {
                    "type": "integer",
                    "example": 1
                },
                "status": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "ticket.inputTicketUpdate": {
            "type": "object",
            "properties": {
                "contact_information": {
                    "type": "string",
                    "example": "address2......"
                },
                "description": {
                    "type": "string",
                    "example": "bra2 bra2 bra2"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "status": {
                    "type": "integer",
                    "example": 2
                },
                "title": {
                    "type": "string",
                    "example": "Harry potter2"
                }
            }
        },
        "ticket.messageResponse": {
            "type": "object",
            "properties": {
                "message_description": {
                    "type": "string"
                },
                "status": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "ticket.ticketCountRes": {
            "type": "object",
            "properties": {
                "ticket_count": {
                    "type": "integer"
                }
            }
        },
        "ticket.ticketListRes": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ticket.ticketRes"
                    }
                },
                "header": {
                    "$ref": "#/definitions/ticket.ticketCountRes"
                }
            }
        },
        "ticket.ticketRes": {
            "type": "object",
            "properties": {
                "contact_information": {
                    "type": "string"
                },
                "created_timestamp": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "sequence": {
                    "type": "integer"
                },
                "status_name": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "update_timestamp": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "3.0",
	Host:             "localhost:8080",
	BasePath:         "/app",
	Schemes:          []string{"http"},
	Title:            "Swagger Example API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
